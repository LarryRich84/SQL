Show Customers (their full names, customer ID, and country) who are not in the US. (Hint: != or <> can be used to say "is not equal to").
Show only the Customers from Brazil.
Find the Invoices of customers who are from Brazil. The resulting table should show the customer's full name, Invoice ID, Date of the invoice, and billing country.
Show the Employees who are Sales Agents.
Find a unique/distinct list of billing countries from the Invoice table.
Provide a query that shows the invoices associated with each sales agent. The resulting table should include the Sales Agent's full name.
Show the Invoice Total, Customer name, Country, and Sales Agent name for all invoices and customers.
How many Invoices were there in 2009?
What are the total sales for 2009?
Write a query that includes the purchased track name with each invoice line ID.
Write a query that includes the purchased track name AND artist name with each invoice line ID.
Provide a query that shows all the Tracks, and include the Album name, Media type, and Genre.
Show the total sales made by each sales agent.
Which sales agent made the most dollars in sales in 2009?

1.SELECT * FROM customers;
SELECT Firstname, Lastname, CustomerID, Country FROM customers
WHERE Country <> "USA";

2.SELECT * FROM customers
WHERE Country = "Brazil";

3.SELECT customers.FirstName, customers.LastName, invoices.InvoiceId, invoices.InvoiceDate, invoices.BillingCountry FROM invoices
LEFT JOIN customers  
ON invoices.CustomerId= customers.CustomerId
WHERE BillingCountry = "Brazil";

4.SELECT * FROM employees
WHERE Title = "Sales Support Agent";

5.SELECT * FROM invoices
WHERE Total >"25";

6.SELECT BillingCountry, SUM(Total) FROM invoices
GROUP BY BillingCountry;

7.SELECT emp.LastName, emp.Firstname, inv.InvoiceId
FROM chinook.Employees emp 
JOIN chinook.Customers cust ON cust.SupportRepId = emp.EmployeeId
JOIN chinook.Invoices Inv ON Inv.CustomerId = cust.CustomerId;

8.SELECT invoices.Total, customers.FirstName, customers.LastName, customers.Country, employees.FirstName, employees.LastName
FROM employees
LEFT JOIN customers
ON customers.SupportRepID= employees.EmployeeId
JOIN invoices ON invoices.CustomerId= Customers.CustomerId;

9.SELECT COUNT(*) FROM invoices
WHERE InvoiceDate BETWEEN '2009-01-01' AND '2009-12-31';

10.SELECT SUM(Total) FROM invoices
WHERE invoiceDate BETWEEN '2009-01-01' AND '2009-12-31';

11.SELECT t.Name, i.InvoiceLineId
FROM invoice_items i
JOIN tracks t
ON i.trackId= t.TrackId;

12.SELECT ar.name as Artist, t.Name as Track, i.InvoiceLineId
FROM chinook.Invoice_items i
LEFT JOIN chinook.tracks t 
ON i.TrackID=t.TrackID
INNER JOIN chinook.albums a
ON a.AlbumID=t.AlbumID
LEFT JOIN chinook.artists ar
ON ar.ArtistID=a.ArtistID;

13.SELECT t.Name AS 'Track Name', a.Title AS 'Album Title', m.Name AS 'Media Type', g.Name AS 'Genre'
FROM chinook.tracks t
JOIN chinook.Albums a 
on a.AlbumId = t.AlbumId
JOIN chinook.Media_Types m
on m.MediaTypeId = t.MediaTypeId
JOIN chinook.Genres g
on g.GenreId = t.GenreId;

14.SELECT emp.FirstName, emp.LastName,
ROUND(SUM(Inv.Total), 2) as 'Total Sales' 
FROM chinook.Employees emp
JOIN chinook.Customers cust 
ON cust.SupportRepId = emp.EmployeeId
JOIN chinook.Invoices Inv 
ON Inv.CustomerId = cust.CustomerId
WHERE emp.Title = 'Sales Support Agent' 
GROUP BY emp.FirstName;


15.SELECT emp.FirstName, emp.LastName,
ROUND(SUM(Inv.Total), 2) as 'Total Sales' 
FROM chinook.Employees emp
JOIN chinook.Customers cust 
ON cust.SupportRepId = emp.EmployeeId
JOIN chinook.Invoices Inv 
ON Inv.CustomerId = cust.CustomerId
WHERE emp.Title = 'Sales Support Agent' 
AND Inv.InvoiceDate LIKE '2009%' 
GROUP BY emp.FirstName
ORDER BY (round(sum(Inv.Total), 2))  DESC LIMIT 1;
